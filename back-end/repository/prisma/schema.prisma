generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @default(autoincrement())
  firstName       String
  lastName        String
  password        String
  birthDate       DateTime
  email           String     @unique
  username        String     @unique
  description     String?
  role            Role       @default(USER)

  coachOfTeam     Team?      @relation("CoachTeam", fields: [coachOfTeamId], references: [id])
  coachOfTeamId   Int?       @unique

  playerOfTeam    Team?      @relation("PlayerTeam", fields: [playerOfTeamId], references: [id])
  playerOfTeamId  Int?       

  goals           Goal[]     // Goals scored by this user
}

model Team {
  id              Int         @id @default(autoincrement())
  name            String
  description     String

  coach           User?       @relation("CoachTeam")
  players         User[]      @relation("PlayerTeam")

  matches         MatchTeam[]
  goals           Goal[]      // Goals scored by this team
}

model Match {
  id              Int         @id @default(autoincrement())
  date            DateTime

  teams           MatchTeam[]
  location        Location    @relation(fields: [locationId], references: [id])
  locationId      Int

  goals           Goal[]
}

model MatchTeam {
  match           Match       @relation(fields: [matchId], references: [id])
  matchId         Int

  team            Team        @relation(fields: [teamId], references: [id])
  teamId          Int

  goals           Goal[]    // Goals scored by this team in this match

  @@id([matchId, teamId])
}

model Goal {
  id              Int         @id @default(autoincrement())
  time            Int

  match           Match       @relation(fields: [matchId], references: [id])
  matchId         Int

  team            Team        @relation(fields: [teamId], references: [id])
  teamId          Int

  matchTeam       MatchTeam   @relation(fields: [matchId, teamId], references: [matchId, teamId], onDelete: Cascade)

  player          User        @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId        Int
}

model Location {
  id              Int         @id @default(autoincrement())
  country         String
  city            String
  streetName      String
  zipCode         String
  number          String

  matches         Match[]
}

enum Role {
  ADMIN
  COACH
  PLAYER
  USER
}
